{"version":3,"file":"index.js","sources":["../../node_modules/tslib/tslib.es6.js","../../node_modules/bn.js/lib/bn.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/bignumber/lib.esm/bignumber.js","../../node_modules/@ethersproject/bignumber/lib.esm/_version.js","../../node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","../../node_modules/@ethersproject/units/lib.esm/_version.js","../../node_modules/@ethersproject/units/lib.esm/index.js","../../node_modules/big-number-input/lib/index.js","../../src/components/Input/BigNumberInput.tsx"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\nimport _BN from \"bn.js\";\nvar BN = _BN.BN;\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\nexport class BigNumber {\n    constructor(constructorGuard, hex) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nexport function _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\n// value should have no prefix\nexport function _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\n//# sourceMappingURL=bignumber.js.map","export const version = \"bignumber/5.6.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","export const version = \"units/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __importStar(require(\"react\"));\nvar units_1 = require(\"@ethersproject/units\");\nfunction BigNumberInput(_a) {\n    var decimals = _a.decimals, value = _a.value, onChange = _a.onChange, renderInput = _a.renderInput, autofocus = _a.autofocus, _b = _a.placeholder, placeholder = _b === void 0 ? '0.00' : _b, max = _a.max, min = _a.min;\n    var inputRef = React.useRef(null);\n    var _c = React.useState(''), inputValue = _c[0], setInputvalue = _c[1];\n    // update current value\n    React.useEffect(function () {\n        if (!value) {\n            setInputvalue('');\n        }\n        else {\n            var parseInputValue = void 0;\n            try {\n                parseInputValue = units_1.parseUnits(inputValue || '0', decimals);\n            }\n            catch (_a) {\n                // do nothing\n            }\n            if (!parseInputValue || !parseInputValue.eq(value)) {\n                setInputvalue(units_1.formatUnits(value, decimals));\n            }\n        }\n    }, [value, decimals, inputValue]);\n    React.useEffect(function () {\n        if (!renderInput && autofocus && inputRef) {\n            var node = inputRef.current;\n            node.focus();\n        }\n    }, [autofocus, inputRef]);\n    var updateValue = function (event) {\n        var value = event.currentTarget.value;\n        if (value === '') {\n            onChange(value);\n            setInputvalue(value);\n            return;\n        }\n        var newValue;\n        try {\n            newValue = units_1.parseUnits(value, decimals);\n        }\n        catch (e) {\n            // don't update the input on invalid values\n            return;\n        }\n        var invalidValue = (min && newValue.lt(min)) || (max && newValue.gt(max));\n        if (invalidValue) {\n            return;\n        }\n        setInputvalue(value);\n        onChange(newValue.toString());\n    };\n    var inputProps = {\n        placeholder: placeholder,\n        onChange: updateValue,\n        type: 'text',\n        value: inputValue,\n    };\n    return renderInput ? renderInput(__assign({}, inputProps)) : React.createElement(\"input\", __assign({}, inputProps, { ref: inputRef }));\n}\nexports.BigNumberInput = BigNumberInput;\n//# sourceMappingURL=index.js.map",null],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","module","exports","assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","require","e","parseHex4Bits","string","index","c","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","b","len","Math","min","move","dest","src","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","a","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","m","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","x","y","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","_permanentCensorErrors","_censorErrors","LogLevels","debug","default","info","warning","error","_logLevel","_globalLogger","_normalizeError","missing","forEach","form","normalize","push","join","String","fromCharCode","message","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","version","defineProperty","enumerable","value","writable","_log","logLevel","args","level","toLowerCase","throwArgumentError","console","log","levels","DEBUG","INFO","warn","WARNING","makeError","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","key","Uint8Array","hex","JSON","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","checkAbstract","static","censorship","permanent","globalLogger","logger","isHexable","addSlice","array","slice","isInteger","isBytes","v","isHexString","match","hexlify","options","floor","allowMissingPrefix","substring","toHexString","hexPad","result","hexZeroPad","_BN","_constructorGuard","_warnedToStringRadix","BigNumber","constructorGuard","_hex","_isBigNumber","freeze","toBigNumber","toBN","from","other","throwFault","isNegative","shr","toBigInt","BigInt","type","toHex","anyValue","Zero","NegativeOne","getMultiplier","decimals","formatFixed","multiplier","fraction","whole","parseFixed","comps","wholeValue","fractionValue","wei","FixedFormat","signed","_multiplier","parseInt","check","defaultValue","FixedNumber","format","_value","_isFixedNumber","_checkFormat","addUnsafe","fromValue","subUnsafe","mulUnsafe","divUnsafe","hasFraction","ONE","toFormat","ceiling","round","factor","bump","BUMP","toUnsafeFloat","parseFloat","fromString","isBigNumber","isBigNumberish","fixedFormat","numeric","decimal","unshift","arrayify","fromBytes","names","formatUnits","unitName","indexOf","parseUnits","suffix","formatted","ether","__importStar","__esModule","lib","React","require$$0","units_1","require$$1","BigNumberInput_1","BigNumberInput","_a","onChange","renderInput","autofocus","_b","placeholder","inputRef","useRef","_c","useState","inputValue","setInputvalue","useEffect","parseInputValue","focus","inputProps","event","newValue","currentTarget","createElement","ref","props","getOwnPropertySymbols","propertyIsEnumerable","__rest","displayValue","setDisplayValue","setValue","_BigNumberInput","targetValue"],"mappings":"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"}